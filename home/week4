Key words:
  java :) Interface, abstract , polymorphism, Comparable, Comparator
  static, final, immutable, inner and nested classes, Arrays, System.arraycopy
  native method, encapsulation

1. Написать реализацию IList на основе массива.
  * переопределить toString and equals
2. Переделать старую и использовать в последующих домашках написанный вами список (IList)
3. Начать читать книгу Head First Design Patterns (Первая глава поможет сделать домашку)
4. Написать небольшую игрушку описание ниже).

Название игры - Гладиаторские бои (ваши варианты принимаются)
Суть игры - убить противника.

Как игра должна выглядеть:
  При запуске программы, пользователь выбирает персонажа, которым будет играть.
  Например, Рыцарь, Лучник, Варвар, Маг, Разбойник, Боевой маг и т.д.
  После выбираем оружие (меч, лук, кинжал, посох и т.д).

  Следующим действием выбираем противника, с которым будете биться.

Далее бой:
  Каждый персонаж имеет разные характеристики (кто-то сильнее, а кто-то более ловкий).
  Перед ударом Вам необходимо выбрать цель - голова, живот, ноги. (В голову попасть тяжелее, но урон больше).
  Если удар был успешный, то у противника уменьшается уровень здоровья.
  После вашего удара, противник пытается вас ударить.
  Игра длится до тех пор, пока кто-то не умрет)

После боя игроку предлагается повторить бой или выбрать новых персонажей.


Важно!
Лучнику не должна быть доступна опция Мага ("наслать проклятие") и наоборот.
Боевой маг умеет пользоваться магией, но также умеет держать меч в руках.

Структуру программы нужно писать так, чтобы можно было добавлять новых персонажей
или усовершенствовать поведение текущих.
При написании программы приветствуется фантазия.
Не бросайте ничего на пол пути. Если взялись писать функционал, то доведите его до ума.